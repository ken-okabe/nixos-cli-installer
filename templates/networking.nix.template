# /templates/networking.nix.template
#
# Configures basic network settings for the system.
{ pkgs, lib, config, ... }: {

  # Set the system's hostname.
  # The placeholder "__HOSTNAME__" will be replaced by the install script
  # with the hostname chosen by the user during setup.
  networking.hostName = "__HOSTNAME__";

  # Enable NetworkManager.
  # NetworkManager is a widely used and user-friendly service for managing
  # network connections (both wired and wireless). It integrates well with
  # desktop environments like GNOME.
  networking.networkmanager.enable = true;

  # When NetworkManager is enabled, it typically handles DHCP for interfaces.
  # The global `networking.useDHCP` option might conflict or be redundant.
  # It's often recommended to let NetworkManager manage DHCP entirely.
  # If `hardware-configuration.nix` sets `networking.useDHCP = lib.mkDefault true;`,
  # enabling NetworkManager usually takes precedence for interfaces it manages.
  # You can explicitly set it to false if you want NetworkManager to be the sole DHCP handler:
  # networking.useDHCP = lib.mkForce false;
  # For most desktop use cases, just enabling NetworkManager is sufficient.

  # If you have specific network interfaces to configure declaratively (e.g., static IP),
  # you can define them here using `networking.interfaces.<name>.*` options.
  # However, for typical desktop/laptop use with DHCP, NetworkManager handles this dynamically.
  # Example for a wired interface if needed:
  # networking.interfaces.eth0.useDHCP = true; # Assuming eth0 is your interface name.
}
